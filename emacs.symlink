
;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(setq load-path (cons "~/" load-path))
(setq load-path (cons "~/emacs" load-path))
(setq load-path (cons "~/emacs/utils" load-path))

(load "sys-init.el")

;; Load configuration for different systems
(if (string-equal system-type "darwin")
    (load "sys-macosx.el"))

(cond ((string-equal system-type "windows-nt")
       (load "sys-windows.el"))
      (t (load "sys-linux.el")))

(load "sys-common.el")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(emms-lyrics-display-on-minibuffer nil)
 '(emms-lyrics-display-on-modeline t)
 '(muse-html-charset-default "utf-8")
 '(muse-html-encoding-default (quote utf-8))
 '(muse-html-meta-content-encoding (quote utf-8))
 '(quack-default-program "mzscheme")
 '(quack-fontify-style (quote emacs))
 '(quack-programs
   (quote
    ("lisp" "bigloo" "csi" "csi -hygienic" "gosh" "gsi" "gsi ~~/syntax-case.scm -" "guile" "kawa" "mit-scheme" "mred -z" "mzscheme" "mzscheme -il r6rs" "mzscheme -il typed-scheme" "mzscheme -M errortrace" "mzscheme3m" "mzschemecgc" "rs" "scheme" "scheme48" "scsh" "sisc" "stklos" "sxi")))
 '(safe-local-variable-values
   (quote
    ((c-set-style . "BSD")
     (innamespace . 0)
     (access-label . /)
     (statement-case-intro . +)
     (statement-case-open . +)
     (case-label . +)
     (label . /)
     (statement-cont \,
                     (when
                         (fboundp
                          (quote c-no-indent-after-java-annotations))
                       (quote c-no-indent-after-java-annotations))
                     \,
                     (when
                         (fboundp
                          (quote c-lineup-assignments))
                       (quote c-lineup-assignments))
                     ++)
     (substatement-open . 0)
     (inline-open . 0)
     (block-open . 0)
     (topmost-intro . 0)
     (arglist-close . c-lineup-arglist)
     (comment-intro . 0)
     (inher-intro . ++)
     (member-init-intro . ++)
     (func-decl-cont . ++)
     (c-offsets-alist
      (arglist-intro google-c-lineup-expression-plus-4)
      (func-decl-cont . ++)
      (member-init-intro . ++)
      (inher-intro . ++)
      (comment-intro . 0)
      (arglist-close . c-lineup-arglist)
      (topmost-intro . 0)
      (block-open . 0)
      (inline-open . 0)
      (substatement-open . 0)
      (statement-cont \,
                      (when
                          (fboundp
                           (quote c-no-indent-after-java-annotations))
                        (quote c-no-indent-after-java-annotations))
                      \,
                      (when
                          (fboundp
                           (quote c-lineup-assignments))
                        (quote c-lineup-assignments))
                      ++)
      (label . /)
      (case-label . +)
      (statement-case-open . +)
      (statement-case-intro . +)
      (access-label . /)
      (innamespace . 0))
     (c-cleanup-list brace-else-brace brace-elseif-brace brace-catch-brace empty-defun-braces defun-close-semi list-close-comma scope-operator)
     (c-indent-comments-syntactically-p)
     (c-hanging-semi&comma-criteria c-semi&comma-no-newlines-for-oneline-inliners c-semi&comma-inside-parenlist c-semi&comma-no-newlines-before-nonblanks)
     (c-hanging-colons-alist
      (case-label)
      (label after)
      (access-label after)
      (member-init-intro before)
      (inher-intro))
     (c-hanging-braces-alist
      (defun-open after)
      (defun-close before after)
      (class-open after)
      (class-close before after)
      (namespace-open after)
      (inline-open after)
      (inline-close before after)
      (block-open after)
      (block-close . c-snug-do-while)
      (extern-lang-open after)
      (extern-lang-close after)
      (statement-case-open after)
      (substatement-open after))
     (c-comment-only-line-offset . 0)
     (c-enable-xemacs-performance-kludge-p . t)
     (c-recognize-knr-p))))
 '(scheme-program-name "mit-scheme")
 '(speedbar-frame-parameters
   (quote
    ((minibuffer)
     (width . 20)
     (border-width . 0)
     (menu-bar-lines . 0)
     (tool-bar-lines . 0)
     (unsplittable . t)
     (set-background-color "black")))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(bm-face ((t (:background "color-236" :foreground "white"))))
 '(cscope-line-face ((t (:foreground "#5f8700"))))
 '(ecb-default-highlight-face ((t (:background "brightgreen"))))
 '(semantic-decoration-on-private-members-face ((((class color) (background dark)) (:background "#2e3330")))))
